FilepathHierarchy.0001.switch.hierarchy-builder=UseBuilder
FilepathHierarchy.0002.classname.hierarchy-builder=com.atlassian.uwc.hierarchies.FilepathHierarchy
FilepathHierarchy.0003.doc-directory-attachments.property=C:\Temp\WikOut\attach
FilepathHierarchy.0004.filepath-hierarchy-ext.property=
#FilepathHierarchy.0005.filepath-hierarchy-matchpagename.property=true
FilepathHierarchy.0006.filepath-hierarchy-ignorable-ancestors.property=C:\Temp\WikiOut\root
#FilepathHierarchy.0007.doc-directory-template.property=/Users/laura/Code/Subversion/uwc-spac/sampleData/docdirectory/testtemplate.txt
FilepathHierarchy.0008.doc-directory-exclude.property=\.svn
FilepathHierarchy.0009.engine-saves-to-disk.property=true

##### Tokenizer adds ######xxxyyy blocks that stop the regex's parsing the matched delimeters
## This can be used to stop converters changing values in the source.

## Disabled illegal names/links handling as this changes various links from [[ to [( for some reason?
FilepathHierarchy..0010.illegal-handling=false

FilepathHierarchy.0011-attachments.class=com.atlassian.uwc.converters.mediawiki.AttachmentConverter

FilepathHierarchy.0012-html.java-regex-tokenizer=\{html\}((?s).*?)\{html\}{replace-with}{html}$1{html}
                     

## {{{ }}} is no format on LR
FilepathHierarchy.0060-codeblock.java-regex-tokenizer=(?s)\{{3}(.*?)\}{3}{replace-with}{code}$1{code}

## Code, Pre, and Leading Spaces
FilepathHierarchy.0090-re_pre.java-regex-tokenizer=\<pre\>((?s).*?)\<\/pre\>{replace-with}{code}$1{code}
FilepathHierarchy.0095-re_code.java-regex-tokenizer=\<code\>((?s).*?)\<\/code\>{replace-with}{code}$1{code}

FilepathHierarchy.0356.span-color.java-regex-tokenizer=<span style=\"color:([^\"]+)\">(.*?)<\/span>{replace-with}{color:$1}$2{color}

# TOC
FilepathHierarchy.0063-format-TOC.java-regex-tokenizer=(<<TableOfContents>>){replace-with}{toc:style=decimal|maxLevel=2}

## |= is heading in LR - in Confluence its ||
FilepathHierarchy.0540-re_title.java-regex=(\|\=){replace-with}||

## || is OK for table formattiog in LR, in Confluence we need spaces between
FilepathHierarchy.0063-table-addspace.java-regex=(\|\|){replace-with} | | 

## [page|displayed link] in LR - in Confluence its [page].
FilepathHierarchy.0420-re_links_alias.java-regex=\[\[([^|]*)\| *([^\]]*)\]\]{replace-with}[$1]

## set the images-all property to false if you only want the images and 
## attachments that the page text refer to. Otherwise, all attached images will 
## be used.
FilepathHierarchy.0500.images-all.property=true

## == this is legal in LR for a heading so convert to h1. or h2.
FilepathHierarchy.0338-rex_h4.java-regex=(?m)^={5}([\s\w\d()-:/,.]+)${replace-with}h4. $1
FilepathHierarchy.0339-rex_h3.java-regex=(?m)^={4}([\s\w\d()-:/,.]+)${replace-with}h3. $1
FilepathHierarchy.0340-rex_h2.java-regex=(?m)^={3}([\s\w\d()-:/,.]+)${replace-with}h2. $1
FilepathHierarchy.0341-rex_h1.java-regex=(?m)^={2}([\s\w\d()-:/,.]+)${replace-with}h1. $1

FilepathHierarchy.0500-re_h4.java-regex=={5}\s*(.*?)\s*={5}{replace-with}h4. $1
FilepathHierarchy.0510-re_h3.java-regex=={4}\s*(.*?)\s*={4}{replace-with}h3. $1
FilepathHierarchy.0520-re_h2.java-regex=={3}\s*(.*?)\s*={3}{replace-with}h2. $1
FilepathHierarchy.0530-re_h1.java-regex=={2}\s*(.*?)\s*={2}{replace-with}h1. $1

## bold text in LR is two *, in Confluence it's one.
FilepathHierarchy.0550-re_text_bold.java-regex=\*\*(.+)\*\*{replace-with}*$1*

## Italics in LR is //, in Confluence it's _one_.
FilepathHierarchy.0560-re_text_italic.java-regex=//(.+)//{replace-with}_$1_


## NOTE: Images must come after tables or the whitespace gets screwed up if a table has images
## Images must come before Links or Alias handling will make Image conversion more complicated
FilepathHierarchy.0370-re_images.class=com.atlassian.uwc.converters.mediawiki.ImageConverter
FilepathHierarchy.0710-images_ws2underscore.class=com.atlassian.uwc.converters.mediawiki.ImageWhitespaceConverter

## { } is insert macro in Confluence and nothing in LR so escape it
FilepathHierarchy.0862-escaping-curlybrace.java-regex=(\{){replace-with} \\{


##### For any tokenizer regex above, strip out tokens #####
FilepathHierarchy.2000-detokenize.class=com.atlassian.uwc.converters.DetokenizerConverter

